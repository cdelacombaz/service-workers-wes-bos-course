{"version":3,"sources":["src/filters.js"],"names":["redEffect","pixels","i","data","length","rgbSplit","greenScreen","levels","document","querySelectorAll","forEach","input","name","value","red","green","blue","alpha","rmin","gmin","bmin","rmax","gmax","bmax"],"mappings":";;;;;;;;AAAO,SAASA,SAASA,CAACC,MAAM,EAAE;EAChC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,CAACE,IAAI,CAACC,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;IAC9CD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC/CD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9CD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;EACjD;EACA,OAAOD,MAAM;AACf;AAEO,SAASI,QAAQA,CAACJ,MAAM,EAAE;EAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,CAACE,IAAI,CAACC,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;IAC9CD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,GAAG,CAAC,GAAGD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3CD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,GAAG,CAAC,GAAGD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3CD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,GAAG,CAAC,GAAGD,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC7C;EACA,OAAOD,MAAM;AACf;AAEO,SAASK,WAAWA,CAACL,MAAM,EAAE;EAClC,IAAMM,MAAM,GAAG,CAAC,CAAC;EAEjBC,QAAQ,CAACC,gBAAgB,CAAC,YAAY,CAAC,CAACC,OAAO,CAAC,UAAAC,KAAK,EAAI;IACvDJ,MAAM,CAACI,KAAK,CAACC,IAAI,CAAC,GAAGD,KAAK,CAACE,KAAK;EAClC,CAAC,CAAC;EAEF,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,CAACE,IAAI,CAACC,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;IAC9C,IAAMY,GAAG,GAAGb,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC;IAC9B,IAAMa,KAAK,GAAGd,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC;IAChC,IAAMc,IAAI,GAAGf,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC;IAC/B,IAAMe,KAAK,GAAGhB,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC;IAEhC,IACEY,GAAG,IAAIP,MAAM,CAACW,IAAI,IAClBH,KAAK,IAAIR,MAAM,CAACY,IAAI,IACpBH,IAAI,IAAIT,MAAM,CAACa,IAAI,IACnBN,GAAG,IAAIP,MAAM,CAACc,IAAI,IAClBN,KAAK,IAAIR,MAAM,CAACe,IAAI,IACpBN,IAAI,IAAIT,MAAM,CAACgB,IAAI,EACnB;MACA;MACAtB,MAAM,CAACE,IAAI,CAACD,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACxB;EACF;EAEA,OAAOD,MAAM;AACf","file":"filters.436a5cdc.js","sourceRoot":"..","sourcesContent":["export function redEffect(pixels) {\n  for (let i = 0; i < pixels.data.length; i += 4) {\n    pixels.data[i + 0] = pixels.data[i + 0] + 200; // RED\n    pixels.data[i + 1] = pixels.data[i + 1] - 50; // GREEN\n    pixels.data[i + 2] = pixels.data[i + 2] * 0.5; // Blue\n  }\n  return pixels;\n}\n\nexport function rgbSplit(pixels) {\n  for (let i = 0; i < pixels.data.length; i += 4) {\n    pixels.data[i - 150] = pixels.data[i + 0]; // RED\n    pixels.data[i + 500] = pixels.data[i + 1]; // GREEN\n    pixels.data[i - 550] = pixels.data[i + 2]; // Blue\n  }\n  return pixels;\n}\n\nexport function greenScreen(pixels) {\n  const levels = {};\n\n  document.querySelectorAll('.rgb input').forEach(input => {\n    levels[input.name] = input.value;\n  });\n\n  for (let i = 0; i < pixels.data.length; i += 4) {\n    const red = pixels.data[i + 0];\n    const green = pixels.data[i + 1];\n    const blue = pixels.data[i + 2];\n    const alpha = pixels.data[i + 3];\n\n    if (\n      red >= levels.rmin &&\n      green >= levels.gmin &&\n      blue >= levels.bmin &&\n      red <= levels.rmax &&\n      green <= levels.gmax &&\n      blue <= levels.bmax\n    ) {\n      // take it out!\n      pixels.data[i + 3] = 0;\n    }\n  }\n\n  return pixels;\n}\n"]}