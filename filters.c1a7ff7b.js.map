{"version":3,"sources":["src/filters.js"],"names":["redEffect","pixels","i","data","length","rgbSplit","greenScreen","levels","document","querySelectorAll","forEach","input","name","value","red","green","blue","rmin","gmin","bmin","rmax","gmax","bmax"],"mappings":";AA6CA,aA7CO,SAASA,EAAUC,GACxB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,KAAKC,OAAQF,GAAK,EAC3CD,EAAOE,KAAKD,EAAI,GAAKD,EAAOE,KAAKD,EAAI,GAAK,IAC1CD,EAAOE,KAAKD,EAAI,GAAKD,EAAOE,KAAKD,EAAI,GAAK,GAC1CD,EAAOE,KAAKD,EAAI,GAA0B,GAArBD,EAAOE,KAAKD,EAAI,GAEvC,OAAOD,EAGF,SAASI,EAASJ,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAOE,KAAKC,OAAQF,GAAK,EAC3CD,EAAOE,KAAKD,EAAI,KAAOD,EAAOE,KAAKD,EAAI,GACvCD,EAAOE,KAAKD,EAAI,KAAOD,EAAOE,KAAKD,EAAI,GACvCD,EAAOE,KAAKD,EAAI,KAAOD,EAAOE,KAAKD,EAAI,GAEzC,OAAOD,EAGF,SAASK,EAAYL,GAC1B,IAAMM,EAAS,GAEfC,SAASC,iBAAiB,cAAcC,QAAQ,SAAAC,GAC9CJ,EAAOI,EAAMC,MAAQD,EAAME,QAG7B,IAAK,IAAIX,EAAI,EAAGA,EAAID,EAAOE,KAAKC,OAAQF,GAAK,EAAG,CAC9C,IAAMY,EAAMb,EAAOE,KAAKD,EAAI,GACtBa,EAAQd,EAAOE,KAAKD,EAAI,GACxBc,EAAOf,EAAOE,KAAKD,EAAI,GACfD,EAAOE,KAAKD,EAAI,GAG5BY,GAAOP,EAAOU,MACdF,GAASR,EAAOW,MAChBF,GAAQT,EAAOY,MACfL,GAAOP,EAAOa,MACdL,GAASR,EAAOc,MAChBL,GAAQT,EAAOe,OAGfrB,EAAOE,KAAKD,EAAI,GAAK,GAIzB,OAAOD,EACT,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAAA,QAAA,UAAA,EAAA,QAAA,SAAA","file":"filters.c1a7ff7b.js","sourceRoot":"..","sourcesContent":["export function redEffect(pixels) {\n  for (let i = 0; i < pixels.data.length; i += 4) {\n    pixels.data[i + 0] = pixels.data[i + 0] + 200; // RED\n    pixels.data[i + 1] = pixels.data[i + 1] - 50; // GREEN\n    pixels.data[i + 2] = pixels.data[i + 2] * 0.5; // Blue\n  }\n  return pixels;\n}\n\nexport function rgbSplit(pixels) {\n  for (let i = 0; i < pixels.data.length; i += 4) {\n    pixels.data[i - 150] = pixels.data[i + 0]; // RED\n    pixels.data[i + 500] = pixels.data[i + 1]; // GREEN\n    pixels.data[i - 550] = pixels.data[i + 2]; // Blue\n  }\n  return pixels;\n}\n\nexport function greenScreen(pixels) {\n  const levels = {};\n\n  document.querySelectorAll('.rgb input').forEach(input => {\n    levels[input.name] = input.value;\n  });\n\n  for (let i = 0; i < pixels.data.length; i += 4) {\n    const red = pixels.data[i + 0];\n    const green = pixels.data[i + 1];\n    const blue = pixels.data[i + 2];\n    const alpha = pixels.data[i + 3];\n\n    if (\n      red >= levels.rmin &&\n      green >= levels.gmin &&\n      blue >= levels.bmin &&\n      red <= levels.rmax &&\n      green <= levels.gmax &&\n      blue <= levels.bmax\n    ) {\n      // take it out!\n      pixels.data[i + 3] = 0;\n    }\n  }\n\n  return pixels;\n}\n"]}